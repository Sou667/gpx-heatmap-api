openapi: 3.1.0
info:
  title: CycleDoc Heatmap API
  version: "1.0"
  description: >
    Diese API analysiert GPX-Daten, segmentiert die Strecke und berechnet Risiken auf Basis von
    Wetter, Kurven, Straßenoberfläche etc. Es werden interaktive Karten mit Farbvisualisierung erstellt,
    und mittels einer intelligenten, clusterbasierten Sanitäter‑Logik (repräsentativer Marker im Rennmodus,
    Markierung aller riskanten Segmente bei Privattouren) werden potenziell gefährliche Abschnitte hervorgehoben.
    Zusätzlich wird ein detaillierter Textbericht generiert.
servers:
  - url: https://gpx-heatmap-api.onrender.com

paths:
  /:
    get:
      summary: Health-Check
      operationId: healthCheck
      responses:
        '200':
          description: CycleDoc Heatmap-API ist bereit.
          content:
            text/plain:
              schema:
                type: string
                example: "✅ CycleDoc Heatmap-API bereit"

  /heatmap-quick:
    post:
      summary: Segmentierte Risikoanalyse & Heatmap-Visualisierung mit erweiterter Sanitäter‑Logik und detailliertem Bericht
      operationId: analyzeHeatmapQuick
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HeatmapRequest'
      responses:
        '200':
          description: Risikoanalyse erfolgreich abgeschlossen.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeatmapResponse'
        '400':
          description: Ungültige oder fehlende Eingabedaten (z. B. Koordinaten oder start_time).
        '500':
          description: Interner Serverfehler.

  /parse-gpx:
    post:
      summary: GPX-Datei hochladen und Koordinaten + Distanz extrahieren
      operationId: parseGpxFile
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: >
                    Die zu verarbeitende GPX-Datei. Falls diese Datei nicht über den "file"‑Key übermittelt wird,
                    versucht der Server, den Raw‑Body zu verarbeiten.
      responses:
        '200':
          description: GPX-Daten erfolgreich geparst.
          content:
            application/json:
              schema:
                type: object
                properties:
                  coordinates:
                    type: array
                    description: Liste der extrahierten Koordinaten (Latitude, Longitude, Elevation).
                    items:
                      type: array
                      items:
                        type: number
                  distance_km:
                    type: number
                    description: Gesamtstrecke in Kilometern.
        '400':
          description: Fehlerhafte oder ungültige GPX-Datei.

  /chunk-upload:
    post:
      summary: GPX-Koordinaten in Chunks unterteilen und speichern
      operationId: chunkUpload
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                coordinates:
                  type: array
                  description: >
                    Array von Koordinaten (jeder Punkt ist ein Array mit mindestens Latitude und Longitude).
                  items:
                    type: array
                    items:
                      type: number
                chunk_size:
                  type: integer
                  description: Maximale Anzahl der Koordinaten pro Chunk.
                  default: 200
      responses:
        '200':
          description: Chunks erfolgreich gespeichert.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  chunks:
                    type: array
                    items:
                      type: string
        '400':
          description: Keine gültigen Koordinaten empfangen.

  /openapi.yaml:
    get:
      summary: Liefert die OpenAPI‑Spezifikation (YAML)
      operationId: getOpenapiYaml
      responses:
        '200':
          description: YAML-Datei gefunden.
          content:
            text/yaml:
              schema:
                type: string
        '404':
          description: Datei nicht gefunden.

components:
  schemas:
    HeatmapRequest:
      type: object
      required:
        - coordinates
        - start_time
      properties:
        coordinates:
          type: array
          description: >
            Array von Koordinaten. Jede Koordinate ist ein Array, das mindestens Latitude und Longitude (und optional Elevation) enthält.
          items:
            type: array
            items:
              type: number
          example: [[51.242, 6.830, 42.0], [51.243, 6.831, 42.1]]
        fahrer_typ:
          type: string
          description: Fahrertyp, z. B. "hobby" oder "profi".
          example: "hobby"
        anzahl:
          type: integer
          description: Anzahl der Teilnehmer.
          example: 1
        alter:
          type: integer
          description: Alter des Fahrers bzw. der Fahrer.
          example: 42
        geschlecht:
          type: string
          description: Geschlecht des Fahrers (z. B. "m" oder "w").
          example: "m"
        massenstart:
          type: boolean
          description: Gibt an, ob es sich um einen Massenstart handelt.
          example: false
        overuse_knee:
          type: boolean
          description: Gibt an, ob eine Überbeanspruchung der Knie vorliegt.
          example: false
        rueckenschmerzen:
          type: boolean
          description: Gibt an, ob Rückenbeschwerden vorliegen.
          example: false
        material:
          type: string
          description: Material des Fahrrads (z. B. "carbon", "aluminium").
          example: "aluminium"
        rennen_art:
          type: string
          description: Art des Rennens, z. B. "downhill", "freeride", "rennen".
          example: "downhill"
        start_time:
          type: string
          format: date-time
          description: >
            ISO‑8601 Datum/Uhrzeit, ab der die Strecke gestartet wurde. Dieses Feld ist verpflichtend.
          example: "2025-04-09T07:00:00Z"
        wetter_override:
          type: object
          description: Optionale Wetterdaten, die Echtzeitwetterinformationen überschreiben.
          properties:
            temperature:
              type: number
            wind_speed:
              type: number
            precip:
              type: number
            condition:
              type: string
          example:
            temperature: 10
            wind_speed: 12
            precip: 0
            condition: "klar"
        schutzausruestung:
          type: object
          description: Angaben zur getragenen Schutzausrüstung.
          properties:
            helm:
              type: boolean
            protektoren:
              type: boolean
          example:
            helm: true
            protektoren: false

    HeatmapResponse:
      type: object
      properties:
        heatmap_url:
          type: string
          format: uri
          description: URL der generierten Heatmap im statischen Verzeichnis.
          example: "https://gpx-heatmap-api.onrender.com/static/heatmap_20250409070000.html"
        distance_km:
          type: number
          description: Gesamtstrecke in Kilometern.
          example: 15.3
        segments:
          type: array
          description: Liste der analysierten Segmente inkl. Risikobewertung, Verletzungsprognose und Sanitäter‑Logik.
          items:
            type: object
            properties:
              segment_index:
                type: integer
                description: Laufende Nummer des Segments.
                example: 1
              center:
                type: object
                description: Zentraler Punkt des Segments.
                properties:
                  lat:
                    type: number
                  lon:
                    type: number
                example: {"lat": 51.243, "lon": 6.832}
              slope:
                type: number
                description: Steigung des Segments in Prozent.
                example: 3.5
              sharp_curve:
                type: boolean
                description: Gibt an, ob das Segment eine scharfe Kurve enthält.
                example: true
              terrain:
                type: string
                description: Terrain des Segments ("Anstieg", "Abfahrt", "Flach").
                example: "Anstieg"
              weather:
                type: object
                description: Wetterdaten, die für die Segmentanalyse verwendet wurden.
                properties:
                  temperature:
                    type: number
                  wind_speed:
                    type: number
                  precip:
                    type: number
                  condition:
                    type: string
                example:
                  temperature: 10
                  wind_speed: 12
                  precip: 0
                  condition: "klar"
              street_surface:
                type: string
                description: Ermittelte Straßenoberfläche (z. B. asphalt, cobblestone, gravel).
                example: "asphalt"
              nighttime:
                type: boolean
                description: Gibt an, ob das Segment in der Nacht gefahren wurde.
                example: false
              risk:
                type: integer
                description: Berechnetes Risiko des Segments (Wert zwischen 1 und 5).
                example: 3
              injuries:
                type: array
                description: Liste typischer Verletzungsbilder für das Segment.
                items:
                  type: string
                example: ["Abschürfungen", "Prellungen"]
              sani_needed:
                type: boolean
                description: Flag, das angibt, ob basierend auf der clusterbasierten Risikoanalyse ein Saniposten empfohlen wird.
                example: true
        detailed_report:
          type: string
          description: Detaillierter Textbericht, der alle Abschnitte (Streckenlänge, Wetterlage, Risikoeinschätzung, Gesamtrisiko, wahrscheinliche Verletzungen, Präventionsempfehlung, Quellen, interaktive Karte) umfasst.
          example: "Abschnitt 0: Streckenlänge\nDie Strecke umfasst 15.3 km.\nAbschnitt 1: Wetterlage\nRepräsentativer Punkt: (Lat: 51.250, Lon: 6.850) – Datum: 2025-04-09T07:00:00Z, Temperatur: 10°C, Wind: 12 km/h, Niederschlag: 0 mm, Bedingung: klar (Quelle: WeatherStack)\n..."
